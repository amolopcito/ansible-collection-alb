name: Ansible CI
on:
  pull_request:
    branches: [ main ]
jobs:
  test:
    name: Test alb collection
    runs-on: ubuntu-latest
    env:
      HOME: "/home/runner"
    strategy:
      matrix:
        ansible: [2.9.17, 2.10.5]
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install ansible-base (v${{ matrix.ansible }})
      run: pip install https://github.com/ansible/ansible/archive/v${{ matrix.ansible }}.tar.gz --disable-pip-version-check

    - name: Install coverage (v4.5.4)
      run: pip install coverage==4.5.4

    - name: Build a collection tarball
      run: ansible-galaxy collection build --output-path "${GITHUB_WORKSPACE}/.cache/collection-tarballs"

    - name: Store migrated collection artifacts
      uses: actions/upload-artifact@v1
      with:
        name: collection
        path: .cache/collection-tarballs

    - name: Install the collection tarball
      run: ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz

    - name: Run sanity test validate-modules
      run: ansible-test sanity --test validate-modules --docker -v --color --truncate 0 --coverage --python 3.8
      working-directory: ${{ HOME }}/.ansible/collections/ansible_collections/amolopcito/alb

    - name: Run sanity test yamllint
      run: ansible-test sanity --test yamllint --docker -v --color --truncate 0 --coverage --python 3.8
      working-directory: /home/runner/.ansible/collections/ansible_collections/amolopcito/alb

    - name: Run sanity test ansible-doc
      run: ansible-test sanity --test ansible-doc --docker -v --color --truncate 0 --coverage --python 3.8
      working-directory: ${{ HOME }}/.ansible/collections/ansible_collections/amolopcito/alb

    - name: Run sanity test compile
      run: ansible-test sanity --test compile --docker -v --color --truncate 0 --coverage --python 3.8
      working-directory: ${{ HOME }}/.ansible/collections/ansible_collections/amolopcito/alb

    - name: Run unit tests
      run: ansible-test units --docker -v --color --truncate 0 --python 3.8 --coverage
      working-directory: ${{ HOME }}/.ansible/collections/ansible_collections/amolopcito/alb

  importer:
    name: Galaxy-importer check
    runs-on: ubuntu-latest
    needs:
      - test
    env:
      ANSIBLE_SKIP_CONFLICT_CHECK: 1
    steps:
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Get Python version
        run: echo "::debug::$(echo $(echo pip --version))"

      - name: Install ansible-base (v2.9.17)
        id: ansible-base
        run: pip install https://github.com/ansible/ansible/archive/v2.9.17.tar.gz --disable-pip-version-check

      - name: Download migrated collection artifacts
        uses: actions/download-artifact@v1
        with:
          name: collection
          path: .cache/collection-tarballs

      - name: Install the collection tarball
        run: ansible-galaxy collection install .cache/collection-tarballs/*.tar.gz

      - name: Install galaxy-importer
        run: ${{ env.ANSIBLE_SKIP_CONFLICT_CHECK }} pip install galaxy-importer

      - name: Create galaxy-importer directory
        run: sudo mkdir -p /etc/galaxy-importer

      - name: Create galaxy-importer.cfg
        run: sudo cp /home/runner/.ansible/collections/ansible_collections/amolopcito/alb/.github/workflows/galaxy-importer.cfg /etc/galaxy-importer/galaxy-importer.cfg

      - name: Run galaxy-importer check
        run: python -m galaxy_importer.main .cache/collection-tarballs/amolopcito-*.tar.gz | tee .cache/collection-tarballs/log.txt && sudo cp ./importer_result.json .cache/collection-tarballs/importer_result.json

      - name: Check errors
        run: if grep -E 'ERROR' .cache/collection-tarballs/log.txt; then exit 1; else exit 0; fi

      - name: Store galaxy_importer check log file
        uses: actions/upload-artifact@v1
        with:
          name: galaxy-importer-log
          path: .cache/collection-tarballs/importer_result.json
